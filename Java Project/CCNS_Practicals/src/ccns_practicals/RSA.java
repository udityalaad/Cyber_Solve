/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ccns_practicals;

import java.math.BigInteger;
import java.util.Random;

/**
 *
 * @author Uditya
 */
public class RSA extends javax.swing.JFrame {

    BigInteger p;
    BigInteger q;
    BigInteger n;
    BigInteger phi_p;
    BigInteger phi_q;
    BigInteger phi_n;
    
    BigInteger e;
    BigInteger d;
    
    BigInteger RANGE = new BigInteger("100000");
    
    BigInteger s1;
    BigInteger s2;
    BigInteger t1;
    BigInteger t2;
    
    /**
     * Creates new form RSA
     */
    public RSA() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CT = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Encrypted_CT = new javax.swing.JTextField();
        Decrypted_PT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        label_e = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        p_value = new javax.swing.JTextField();
        n_value = new javax.swing.JTextField();
        q_value = new javax.swing.JTextField();
        e_value = new javax.swing.JTextField();
        d_value = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Cipher Text");

        jButton1.setText("Find Cipher Text");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Plain Text");

        jButton2.setText("Find Plain Text");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("p");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("RSA");

        CT.setToolTipText("");
        CT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CTActionPerformed(evt);
            }
        });

        jButton3.setText("Go Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Plain Text");

        jLabel2.setText("Cipher Text");

        Encrypted_CT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encrypted_CTActionPerformed(evt);
            }
        });

        Decrypted_PT.setToolTipText("");

        jLabel7.setText("q");

        jLabel8.setText("n");

        label_e.setText("e");

        jLabel10.setText("d");

        p_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_valueActionPerformed(evt);
            }
        });

        n_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n_valueActionPerformed(evt);
            }
        });

        q_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q_valueActionPerformed(evt);
            }
        });

        e_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_valueActionPerformed(evt);
            }
        });

        d_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_valueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Encrypted_CT, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(Decrypted_PT, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(10, 10, 10)
                            .addComponent(p_value, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(jLabel7)
                            .addGap(10, 10, 10)
                            .addComponent(q_value, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(n_value, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(label_e)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(e_value, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(d_value))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PT, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addComponent(jButton1)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(77, 77, 77)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(CT, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(156, 156, 156)
                                    .addComponent(jButton2)
                                    .addGap(83, 83, 83))))))
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(30, 30, 30)
                            .addComponent(jButton2))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(53, 53, 53)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(30, 30, 30)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(label_e)
                    .addComponent(jLabel10)
                    .addComponent(p_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(e_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Encrypted_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Decrypted_PT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(32, 32, 32)
                .addComponent(jButton3)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        BigInteger M = new BigInteger(PT.getText());
        Encrypted_CT.setText(Encrypt(M).toString());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        BigInteger C = new BigInteger(CT.getText());
        Decrypted_PT.setText(Decrypt(C).toString());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void CTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CTActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        setVisible(false);
        new Main_Page().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void Encrypted_CTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encrypted_CTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Encrypted_CTActionPerformed

    private void p_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_valueActionPerformed

    private void n_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_n_valueActionPerformed

    private void q_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q_valueActionPerformed

    private void e_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_valueActionPerformed

    private void d_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d_valueActionPerformed

    
    void Generate_Key (BigInteger M) {
        System.out.println("\n\nKey Generation");
        System.out.println("  Step 1:");
        p = new BigInteger("1");
        q = new BigInteger("1");
        
        n = new BigInteger("-1");
        
        while ((M.compareTo(n) == 0)  ||  ((p.mod(q)).equals(new BigInteger("0")))  ||  (p.equals(new BigInteger("2")))  ||  (q.equals(new BigInteger("2")))) {
            p = Find_Random_Prime_Number();
            q = Find_Random_Prime_Number();
            
            n = p.multiply(q);
        }
        
        System.out.println("\tp = " + p);
        p_value.setText(p.toString());
        
        System.out.println("\tq = " + q);
        q_value.setText(q.toString());
        
        
        System.out.println("\n  Step 2:");
        System.out.println("\tn = " + n);
        n_value.setText(n.toString());
        
        phi_p = p.subtract(new BigInteger("1"));
        System.out.println("\tphi(p) = " + phi_p);
        
        phi_q = q.subtract(new BigInteger("1"));
        System.out.println("\tphi(q) = " + phi_q);
        
        phi_n = phi_p.multiply(phi_q);
        System.out.println("\tphi(n) = " + phi_n);
        
        
        
        System.out.println("\n  Step 3:");
        System.out.println("\tgcd(e, " + phi_p +  ") = 1");
        System.out.println("\tgcd(e, " + phi_q +  ") = 1");
        System.out.println("\tgcd(e, " + phi_n +  ") = 1");
        
        e = new BigInteger("1");
        for (int i = 2; !Is_Prime(e.intValue())  ||  (d.compareTo(n) != -1)  ||  (d.compareTo(RANGE) == 1)  ||  !((Find_GCD(e, phi_p).compareTo(new BigInteger("1")) == 0)  &&  (Find_GCD(e, phi_q).compareTo(new BigInteger("1")) == 0)  &&  (Find_GCD(e, phi_n).compareTo(new BigInteger("1")) == 0)); i++) {
            e = new BigInteger(Integer.toString(i));
            
            d = Find_Multiplicative_Inverse(phi_n, e);
        }
        System.out.println("\n\te = " + e);
        e_value.setText(e.toString());
        
        
        System.out.println("\n  Step 4:");
        System.out.println("\te.d = 1 mod phi(n)");
        System.out.println("\t"+ e + ".d = 1 mod " + phi_n);
        
        System.out.println("\t=> d = " + d);
        d_value.setText(d.toString());
    }
    
    
    BigInteger Find_Random_Prime_Number () {
        int num = 0;
        Random rand = new Random();
        
        num = Math.abs(rand.nextInt(RANGE.intValue())) + 1;
        
        while (!Is_Prime(num)  ||  (num <= 1)) {
            num = Math.abs(rand.nextInt(RANGE.intValue())) + 1;
        }
        
        return (new BigInteger(Integer.toString(num)));
    }
    
    
    boolean Is_Prime (int input) {
        if (input <= 1) {
            return false;
        }
        
        for (int i = 2; i <= input/2; i++) {
            if ((input % i) == 0) {
                return false;
            }
        }
        
        return true;
    }
    
    
    
    BigInteger Find_Multiplicative_Inverse (BigInteger r1, BigInteger r2) {
        s1 = new BigInteger("1");
        s2 = new BigInteger("0");
        
        t1 = new BigInteger("0");
        t2 = new BigInteger("1");
        
        BigInteger gcd = Find_GCD(r1, r2);
        
        BigInteger multiplicative_inverse = new BigInteger("-1");
        
        if (gcd.equals(new BigInteger("1"))) {
            if (t1.compareTo(new BigInteger("0")) ==  -1) {
                multiplicative_inverse = r1.add(t1);
            }
            else {
                multiplicative_inverse = t1;
            }
        }
        
        s1 = new BigInteger("1");
        s2 = new BigInteger("0");
        
        t1 = new BigInteger("0");
        t2 = new BigInteger("1");
        
        return multiplicative_inverse;
    }
    
    
    
    BigInteger Find_GCD (BigInteger r1, BigInteger r2) {
        if (r2.equals(new BigInteger("0"))) {
            return r1;
        }
        
        BigInteger q1 = r1.divide(r2);
        BigInteger r = r1.mod(r2);
        
        BigInteger s = s1.subtract(q1.multiply(s2));
        BigInteger t = t1.subtract(q1.multiply(t2));
        
        s1 = s2;
        s2 = s;
        
        t1 = t2;
        t2 = t;
        
        return Find_GCD (r2, r);
    }
    
    
    
    BigInteger Encrypt(BigInteger M) {
        Generate_Key(M);
        
        System.out.print("\n\nEncryption:");
        
        BigInteger C = (M.pow(e.intValue())).mod(n);
        System.out.print("\n\tC = " + M + "^" + e + " mod " + n + " = " + C);
        
        return C;
    }
    
    
    
    BigInteger Decrypt (BigInteger C) {
        System.out.print("\n\nDecryption:");
        
        BigInteger M = (C.pow(d.intValue())).mod(n);
        System.out.print("\n\tM = " + C + "^" + d + " mod " + n + " = " + M);
        
        return M;
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RSA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RSA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RSA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RSA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RSA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CT;
    private javax.swing.JTextField Decrypted_PT;
    private javax.swing.JTextField Encrypted_CT;
    private javax.swing.JTextField PT;
    private javax.swing.JTextField d_value;
    private javax.swing.JTextField e_value;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel label_e;
    private javax.swing.JTextField n_value;
    private javax.swing.JTextField p_value;
    private javax.swing.JTextField q_value;
    // End of variables declaration//GEN-END:variables
}
